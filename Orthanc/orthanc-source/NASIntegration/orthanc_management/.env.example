# Orthanc Management Module - Database Configuration Examples
# Copy this file to .env and modify for your environment

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# Database Type Selection
# Supported values: sqlite, mysql, postgresql, firebird, mssql, oracle
ORTHANC_DB_TYPE=sqlite

# ==============================================
# SQLITE CONFIGURATION (Default)
# ==============================================
# For development and small installations
ORTHANC_DB_PATH=./orthanc_management/data/orthanc_management.db

# ==============================================
# MYSQL CONFIGURATION
# ==============================================
# Uncomment and configure for MySQL/MariaDB
# ORTHANC_DB_TYPE=mysql
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_PORT=3306
# ORTHANC_DB_NAME=orthanc_management
# ORTHANC_DB_USER=orthanc_user
# ORTHANC_DB_PASSWORD=your_secure_password

# ==============================================
# POSTGRESQL CONFIGURATION
# ==============================================
# Uncomment and configure for PostgreSQL
# ORTHANC_DB_TYPE=postgresql
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_PORT=5432
# ORTHANC_DB_NAME=orthanc_management
# ORTHANC_DB_USER=orthanc_user
# ORTHANC_DB_PASSWORD=your_secure_password
# ORTHANC_DB_SSL_MODE=prefer

# ==============================================
# FIREBIRD CONFIGURATION
# ==============================================
# Uncomment and configure for Firebird
# ORTHANC_DB_TYPE=firebird
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_PORT=3050
# ORTHANC_DB_PATH=/path/to/orthanc_management.fdb
# ORTHANC_DB_USER=SYSDBA
# ORTHANC_DB_PASSWORD=your_firebird_password

# ==============================================
# SQL SERVER CONFIGURATION
# ==============================================
# Uncomment and configure for Microsoft SQL Server
# ORTHANC_DB_TYPE=mssql
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_PORT=1433
# ORTHANC_DB_NAME=orthanc_management
# ORTHANC_DB_USER=sa
# ORTHANC_DB_PASSWORD=your_sqlserver_password

# ==============================================
# ORACLE CONFIGURATION
# ==============================================
# Uncomment and configure for Oracle
# ORTHANC_DB_TYPE=oracle
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_PORT=1521
# ORTHANC_DB_NAME=orcl
# ORTHANC_DB_USER=orthanc_user
# ORTHANC_DB_PASSWORD=your_oracle_password

# ==============================================
# CONNECTION POOL SETTINGS
# ==============================================
# Adjust based on your application load
ORTHANC_DB_POOL_SIZE=5
ORTHANC_DB_MAX_OVERFLOW=10
ORTHANC_DB_POOL_TIMEOUT=30

# ==============================================
# SSL/TLS SETTINGS (for remote databases)
# ==============================================
# ORTHANC_DB_SSL_MODE=require
# ORTHANC_DB_SSL_CERT=/path/to/client-cert.pem
# ORTHANC_DB_SSL_KEY=/path/to/client-key.pem
# ORTHANC_DB_SSL_CA=/path/to/ca-cert.pem

# ==============================================
# DEBUG SETTINGS
# ==============================================
# Set to true to see SQL queries in logs (development only)
ORTHANC_DB_ECHO=false

# ==============================================
# QUICK SETUP EXAMPLES
# ==============================================

# Example 1: Simple SQLite setup (recommended for development)
# ORTHANC_DB_TYPE=sqlite
# ORTHANC_DB_PATH=./data/orthanc_management.db

# Example 2: Local MySQL setup
# ORTHANC_DB_TYPE=mysql
# ORTHANC_DB_HOST=localhost
# ORTHANC_DB_NAME=orthanc_management
# ORTHANC_DB_USER=root
# ORTHANC_DB_PASSWORD=password

# Example 3: Production PostgreSQL setup
# ORTHANC_DB_TYPE=postgresql
# ORTHANC_DB_HOST=db.example.com
# ORTHANC_DB_NAME=orthanc_management
# ORTHANC_DB_USER=orthanc_prod
# ORTHANC_DB_PASSWORD=secure_production_password
# ORTHANC_DB_SSL_MODE=require
# ORTHANC_DB_POOL_SIZE=10
# ORTHANC_DB_MAX_OVERFLOW=20

# ==============================================
# INSTALLATION NOTES
# ==============================================

# SQLite (No additional setup required)
# - Built into Python
# - Good for development and small installations
# - Single file database

# MySQL/MariaDB Setup:
# 1. Install MySQL/MariaDB server
# 2. pip install PyMySQL
# 3. Create database: CREATE DATABASE orthanc_management;
# 4. Create user: CREATE USER 'orthanc_user'@'localhost' IDENTIFIED BY 'password';
# 5. Grant permissions: GRANT ALL ON orthanc_management.* TO 'orthanc_user'@'localhost';

# PostgreSQL Setup:
# 1. Install PostgreSQL server
# 2. pip install psycopg2-binary
# 3. Create database: createdb orthanc_management
# 4. Create user: createuser orthanc_user
# 5. Set password: ALTER USER orthanc_user PASSWORD 'password';
# 6. Grant permissions: GRANT ALL ON DATABASE orthanc_management TO orthanc_user;

# Firebird Setup:
# 1. Install Firebird server
# 2. pip install fdb
# 3. Create database using isql or flamerobin
# 4. Configure user and password

# SQL Server Setup:
# 1. Install SQL Server
# 2. pip install pyodbc
# 3. Install ODBC Driver 17 for SQL Server
# 4. Create database and user with appropriate permissions

# Oracle Setup:
# 1. Install Oracle Database
# 2. Install Oracle Instant Client
# 3. pip install cx_Oracle
# 4. Create user and tablespace
# 5. Grant appropriate permissions

# ==============================================
# PERFORMANCE TUNING
# ==============================================

# For high-volume installations:
# - Use PostgreSQL or SQL Server for better performance
# - Increase connection pool size
# - Configure database-specific optimizations
# - Consider read replicas for reporting
# - Implement connection pooling at application level
# - Use Redis for caching frequently accessed data
